{"ast":null,"code":"import { NgForm, Validators } from '@angular/forms';\nimport { GenericValidator } from 'src/app/shared/GenericValidator';\nimport { Category } from './product';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/productService\";\nimport * as i4 from \"@angular/common\";\nfunction ProductAddComponent_div_1_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Error : \", ctx_r1.errorMessage, \" \");\n  }\n}\nfunction ProductAddComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"h2\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function ProductAddComponent_div_1_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.saveProduct(ctx_r2.product));\n    });\n    i0.ɵɵelementStart(6, \"div\", 7)(7, \"label\", 8);\n    i0.ɵɵtext(8, \"Product Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 9);\n    i0.ɵɵlistener(\"blur\", function ProductAddComponent_div_1_Template_input_blur_9_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.blur());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\", 10);\n    i0.ɵɵtext(12, \"Price:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 11);\n    i0.ɵɵlistener(\"blur\", function ProductAddComponent_div_1_Template_input_blur_13_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.blur());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 12);\n    i0.ɵɵtext(16, \" Category \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"select\", 13);\n    i0.ɵɵlistener(\"blur\", function ProductAddComponent_div_1_Template_select_blur_17_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.blur());\n    });\n    i0.ɵɵelementStart(18, \"option\", 14);\n    i0.ɵɵtext(19, \"Jeans\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"option\", 15);\n    i0.ɵɵtext(21, \"Grocery\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"option\", 16);\n    i0.ɵɵtext(23, \"Top\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"option\", 17);\n    i0.ɵɵtext(25, \"Shirt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"option\", 18);\n    i0.ɵɵtext(27, \"Food\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"div\", 7)(29, \"label\", 19);\n    i0.ɵɵtext(30, \"Image:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"input\", 20);\n    i0.ɵɵlistener(\"blur\", function ProductAddComponent_div_1_Template_input_blur_31_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.blur());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 7)(33, \"label\", 21);\n    i0.ɵɵtext(34, \"Rating:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"input\", 22);\n    i0.ɵɵlistener(\"blur\", function ProductAddComponent_div_1_Template_input_blur_35_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.blur());\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function ProductAddComponent_div_1_Template_button_click_36_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deleteProduct(ctx_r9.product));\n    });\n    i0.ɵɵtext(37, \"Delete Product\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"button\", 24);\n    i0.ɵɵtext(39, \"Save Product\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(40, ProductAddComponent_div_1_div_40_Template, 2, 1, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.pageTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.addProduct);\n    i0.ɵɵadvance(33);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.addProduct.valid || !ctx_r0.addProduct.dirty);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorMessage);\n  }\n}\nexport class ProductAddComponent {\n  constructor(formBuilder, router, productService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.productService = productService;\n    this.pageTitle = 'Edit Product';\n    this.errorMessage = '';\n    this.displayMessage = {};\n    this.validationMessages = {\n      name: {\n        required: 'Product name is required ',\n        minLength: 'Product name must have 3 characters',\n        maxLength: 'Product name must have less than  equal to 10 chars'\n      },\n      category: {\n        required: 'Category is required'\n      },\n      price: {\n        required: 'Price is required'\n      },\n      image: {\n        required: 'Image is required'\n      },\n      rating: {\n        required: 'Rating is required'\n      }\n    };\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  ngOnInit() {\n    this.addProduct = this.formBuilder.group({\n      id: [],\n      name: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(10)]],\n      category: [Category.jeans, [Validators.required]],\n      price: ['', [Validators.required]],\n      image: ['', [Validators.required]],\n      rating: [3, [Validators.required]]\n    });\n    //when the product is selected from the product list , it should be displayed on the form\n    this.sub = this.productService.selectedProductChanges$.subscribe(selProd => this.displayProduct(selProd));\n    this.addProduct.valueChanges.subscribe(() => this.displayMessage = this.genericValidator.processMessages(this.addProduct));\n  }\n  get id() {\n    return this.addProduct.get(\"id\");\n  }\n  get name() {\n    return this.addProduct.get(\"name\");\n  }\n  get image() {\n    return this.addProduct.get(\"image\");\n  }\n  get price() {\n    return this.addProduct.get(\"price\");\n  }\n  get category() {\n    return this.addProduct.get(\"category\");\n  }\n  get rating() {\n    return this.addProduct.get(\"rating\");\n  }\n  /* onSubmit() {\r\n    this.productService.createProduct(this.addProduct.value)\r\n      .subscribe( data => {console.log(data);\r\n        this.router.navigate(['products']);\r\n      });\r\n  }\r\n  */\n  //method which renders the selected product on the form\n  displayProduct(productParam) {\n    this.product = productParam;\n    if (this.product) {\n      //reset the form to its original\n      this.addProduct.reset();\n      if (this.product.id === 'P010') {\n        this.pageTitle = 'Add Product';\n      } else {\n        this.pageTitle = `Edit Product: ${this.product.name}`;\n      }\n      //update the data on the form\n      this.addProduct.patchValue({\n        id: this.product.id,\n        name: this.product.name,\n        image: this.product.imageUrl,\n        rating: this.product.rating,\n        price: this.product.price,\n        category: this.product.category\n      });\n    }\n  }\n  saveProduct(originalProduct) {\n    if (this.addProduct.valid) {\n      if (this.addProduct.dirty) {\n        //copy over all of the orginal product properties\n        //we arecopying data from teh addform\n        //{...} it ensures that values are not lost ids are retained\n        const product = {\n          ...originalProduct,\n          ...this.addProduct.value\n        };\n        if (product.id == 'P010') {\n          this.productService.createProduct(product).subscribe(resp => {\n            this.productService.changeSelectedProduct(resp);\n            console.log(resp);\n          }, err => this.errorMessage = err);\n        } else {\n          this.productService.updateProduct(product).subscribe(resp => this.productService.changeSelectedProduct(resp), err => this.errorMessage = err);\n        }\n      }\n    }\n    this.router.navigate(['products']);\n  }\n  //validating on blur ,if user tabs out through the form fields\n  blur() {\n    this.displayMessage = this.genericValidator.processMessages(this.addProduct);\n  }\n  deleteProduct(prod) {\n    if (prod && prod.id) {\n      if (confirm(`Are you sure you want to delete ${prod.name} details`)) {\n        this.productService.deleteProduct(prod.id).subscribe(resp => this.productService.changeSelectedProduct(null), err => this.errorMessage = err);\n      } else {\n        //no need to delete the product\n        this.productService.changeSelectedProduct(null);\n      }\n    }\n  }\n}\nProductAddComponent.ɵfac = function ProductAddComponent_Factory(t) {\n  return new (t || ProductAddComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.productService));\n};\nProductAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductAddComponent,\n  selectors: [[\"app-product-add\"]],\n  viewQuery: function ProductAddComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NgForm, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngForm = _t.first);\n    }\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"container\"], [\"class\", \"card\", 4, \"ngIf\"], [1, \"card\"], [1, \"card-header\"], [1, \"text-center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Product name\", \"name\", \"name\", \"id\", \"name\", 1, \"form-control\", 3, \"blur\"], [\"for\", \"price\"], [\"type\", \"number\", \"formControlName\", \"price\", \"placeholder\", \"price\", \"name\", \"price\", \"id\", \"price\", 1, \"form-control\", 3, \"blur\"], [\"for\", \"category\"], [\"name\", \"category\", \"id\", \"category\", \"formControlName\", \"category\", 1, \"form-control\", 3, \"blur\"], [\"selected\", \"\", \"value\", \"jeans\"], [\"value\", \"grocery\"], [\"value\", \"top\"], [\"value\", \"shirt\"], [\"value\", \"food\"], [\"for\", \"image\"], [\"type\", \"text\", \"formControlName\", \"image\", \"placeholder\", \"Product image\", \"name\", \"image\", \"id\", \"image\", 1, \"form-control\", 3, \"blur\"], [\"for\", \"rating\"], [\"type\", \"number\", \"min\", \"1\", \"max\", \"5\", \"formControlName\", \"rating\", \"placeholder\", \"Product rating\", \"name\", \"rating\", \"id\", \"rating\", 1, \"form-control\", 3, \"blur\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"]],\n  template: function ProductAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ProductAddComponent_div_1_Template, 41, 4, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.product);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.MaxValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%]{\\r\\n    margin:auto;\\r\\n    margin-top:30px;\\r\\n    background-color: skyblue;\\r\\n    border:none;\\r\\n    border-radius: 25px;\\r\\n    padding: 30px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvZHVjdHMvcHJvZHVjdC1hZGQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsYUFBYTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XHJcbiAgICBtYXJnaW46YXV0bztcclxuICAgIG1hcmdpbi10b3A6MzBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHNreWJsdWU7XHJcbiAgICBib3JkZXI6bm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgICBwYWRkaW5nOiAzMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["NgForm","Validators","GenericValidator","Category","i0","ProductAddComponent","constructor","formBuilder","router","productService","validationMessages","name","required","minLength","maxLength","category","price","image","rating","genericValidator","ngOnDestroy","sub","unsubscribe","ngOnInit","addProduct","group","id","jeans","selectedProductChanges$","subscribe","selProd","displayProduct","valueChanges","displayMessage","processMessages","get","productParam","product","reset","pageTitle","patchValue","imageUrl","saveProduct","originalProduct","valid","dirty","value","createProduct","resp","changeSelectedProduct","console","log","err","errorMessage","updateProduct","navigate","blur","deleteProduct","prod","confirm","selectors","viewQuery"],"sourceRoot":"","sources":["D:\\Phase2\\demoApp\\src\\app\\products\\product-add.component.ts","D:\\Phase2\\demoApp\\src\\app\\products\\product-add.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { GenericValidator } from 'src/app/shared/GenericValidator';\nimport { productService } from 'src/app/shared/productService';\nimport { IProduct, Category } from './product';\n\n@Component({\n  selector: 'app-product-add',\n  templateUrl: './product-add.component.html',\n  styleUrls: ['./product-add.component.css']\n})\nexport class ProductAddComponent implements OnInit ,OnDestroy {\n\n  @ViewChild(NgForm) ngForm!: NgForm;\n  pageTitle='Edit Product';\n  errorMessage='';\n\n  addProduct!: FormGroup;\n  product!:IProduct | null;\n  sub!:Subscription;\n  displayMessage: {[key:string]:string}={};\n    private validationMessages!:{[key:string]:{[key:string]:string}};\n\n    private genericValidator!:GenericValidator;\n  \n\n    constructor(private formBuilder: FormBuilder,private router: Router, private productService:productService) {\n\n      this.validationMessages={\n\n      name:{\n        required:'Product name is required ',\n        minLength:'Product name must have 3 characters',\n        maxLength:'Product name must have less than  equal to 10 chars'\n      },\n      category:{\n        required:'Category is required'\n      },\n      price:{\n        required:'Price is required'\n      },image:{\n        required:'Image is required'\n      },rating:{\n        required:'Rating is required'\n      },\n\n\n      };\n      this.genericValidator=new GenericValidator(this.validationMessages);\n\n   }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n\n  ngOnInit() {\n\n    this.addProduct = this.formBuilder.group({\n      id: [],\n      name: ['',[ Validators.required,Validators.minLength(3),Validators.maxLength(10)]],\n      category:[Category.jeans,[Validators.required]],\n      price:['',[Validators.required]],\n      image:['',[Validators.required]],\n      rating:[3,[Validators.required]]\n\n    });\n\n    //when the product is selected from the product list , it should be displayed on the form\n\n    this.sub=this.productService.selectedProductChanges$.subscribe(selProd=>this.displayProduct(selProd));\n\n\n    this.addProduct.valueChanges.\n    subscribe(()=>this.displayMessage=this.genericValidator.processMessages(this.addProduct))\n  }\n  get id(){\n    return this.addProduct.get(\"id\");\n  }\n\n  get name(){\n    return this.addProduct.get(\"name\");\n    }\n\n  get image(){\n    return this.addProduct.get(\"image\");\n    }\n  get price(){\n    return this.addProduct.get(\"price\");\n      }\n  get category(){\n      return this.addProduct.get(\"category\");\n        }\n  get rating(){\n      return this.addProduct.get(\"rating\");\n        }\n\n  /* onSubmit() {\n    this.productService.createProduct(this.addProduct.value)\n      .subscribe( data => {console.log(data);\n        this.router.navigate(['products']);\n      });\n  }\n */\n//method which renders the selected product on the form\n  displayProduct(productParam:IProduct |null):void{\n\n   this.product = productParam;\n   if(this.product){\n//reset the form to its original\n    this.addProduct.reset();\n\n    if(this.product.id==='P010'){\n      this.pageTitle='Add Product';\n    }\n    else{\n\n      this.pageTitle=`Edit Product: ${this.product.name}`;\n\n    }\n //update the data on the form\n this.addProduct.patchValue({\n  id:this.product.id,\n   name:this.product.name,\n   image:this.product.imageUrl,\n   rating:this.product.rating,\n   price:this.product.price,\n   category:this.product.category\n\n\n })\n\n\n   }\n\n  }\n\n  saveProduct(originalProduct:IProduct):void{\n\n    if(this.addProduct.valid){\n      if(this.addProduct.dirty){\n        //copy over all of the orginal product properties\n        //we arecopying data from teh addform\n        //{...} it ensures that values are not lost ids are retained\n        const product={...originalProduct,...this.addProduct.value};\n\n      if(product.id=='P010'){\n        this.productService.createProduct(product).subscribe(\n          (resp)=>{\n            this.productService.changeSelectedProduct(resp);\n            console.log(resp);},\n\n          (err)=>this.errorMessage=err\n        );\n        \n\n     }\n     else{\n\n      this.productService.updateProduct(product).subscribe(\n       resp=>this.productService.changeSelectedProduct(resp),\n       err=>this.errorMessage=err      );\n\n     }\n      }\n\n\n    }\n    this.router.navigate(['products'])\n  }\n//validating on blur ,if user tabs out through the form fields\n  blur():void{\n  this.displayMessage=this.genericValidator.processMessages(this.addProduct);\n\n  }\n\n  deleteProduct(prod:IProduct):void{\n    if(prod && prod.id){\n\n      if(confirm(`Are you sure you want to delete ${prod.name} details`)){\n\n        this.productService.deleteProduct(prod.id).subscribe(\n          resp=>this.productService.changeSelectedProduct(null),\n          err=>this.errorMessage=err\n        );\n      }\n      else{\n        //no need to delete the product\n        this.productService.changeSelectedProduct(null)\n      }\n    }\n\n  }\n}","<div class=\"container\">\n<div class=\"card\"\n   *ngIf=\"product\">\n   <div class=\"card-header\"><h2 class=\"text-center\">{{pageTitle}}</h2></div>\n    <div class=\"card-body\">\n    <form [formGroup]=\"addProduct\"\n     (ngSubmit)=\"saveProduct(product)\">\n      <div class=\"form-group\">\n        <label for=\"name\">Product Name:</label>\n        <input type=\"text\" formControlName=\"name\"\n        placeholder=\"Product name\"\n        (blur)=\"blur()\"\n        name=\"name\" class=\"form-control\" id=\"name\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"price\">Price:</label>\n        <input type=\"number\" formControlName=\"price\"\n         placeholder=\"price\"\n         (blur)=\"blur()\" name=\"price\" class=\"form-control\" id=\"price\">\n      </div>\n\n\n      <div class=\"form-group\">\n        <label for=\"category\">\n          Category\n        </label>\n        <select (blur)=\"blur()\" name=\"category\" class='form-control' id=\"category\"\n        formControlName=\"category\">\n          <option selected value=\"jeans\">Jeans</option>\n          <option value=\"grocery\">Grocery</option>\n          <option value=\"top\">Top</option>\n          <option value=\"shirt\">Shirt</option>\n          <option value=\"food\">Food</option>\n        </select>\n      </div>\n\n\n      <div class=\"form-group\">\n        <label for=\"image\">Image:</label>\n        <input (blur)=\"blur()\" type=\"text\" formControlName=\"image\"\n        placeholder=\"Product image\" name=\"image\" class=\"form-control\" id=\"image\">\n      </div>\n\n\n\n      <div class=\"form-group\">\n        <label for=\"rating\">Rating:</label>\n        <input (blur)=\"blur()\" type=\"number\" min=\"1\" max=\"5\"\n        formControlName=\"rating\" placeholder=\"Product rating\" name=\"rating\" class=\"form-control\" id=\"rating\" >\n      </div>\n\n      <button class=\"btn btn-danger\" type=\"button\"\n      (click)=\"deleteProduct(product)\">Delete Product</button>\n      <button [disabled]='!addProduct.valid ||!addProduct.dirty' class=\"btn btn-success\">Save Product</button>\n    </form>\n    </div>\n    <div class='alert alert-danger' *ngIf=\"errorMessage\">\n      Error : {{errorMessage}}\n    </div>\n  </div>\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}