{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.users = ['ayantika', 'chandni'];\n  }\n  isLoggedIn() {\n    return !!this.currentUser;\n  }\n  login(username, password) {\n    if (this.users.includes(username)) {\n      this.currentUser = {\n        username,\n        password,\n        isAdmin: true\n      };\n    } else {\n      this.currentUser = {\n        username,\n        password,\n        isAdmin: false\n      };\n      console.log(this.currentUser.username);\n    }\n  }\n  logOut() {\n    this.currentUser = null;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EAMpBC;IAMA,UAAK,GAAU,CAAC,UAAU,EAAC,SAAS,CAAC;EANvB;EAEdC,UAAU;IACN,OAAO,CAAC,CAAC,IAAI,CAACC,WAAW;EAC7B;EAIAC,KAAK,CAACC,QAAe,EAACC,QAAe;IAErC,IAAG,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACH,QAAQ,CAAC,EAAC;MAChC,IAAI,CAACF,WAAW,GAAC;QACdE,QAAQ;QACRC,QAAQ;QACRG,OAAO,EAAC;OACV;KACD,MAAI;MACD,IAAI,CAACN,WAAW,GAAC;QACbE,QAAQ;QACRC,QAAQ;QACRG,OAAO,EAAC;OACf;MAEDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,WAAW,CAACE,QAAQ,CAAC;;EAGtC;EAEAO,MAAM;IACF,IAAI,CAACT,WAAW,GAAC,IAAI;EACzB;;AApCSH,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFT;AAAM","names":["AuthService","constructor","isLoggedIn","currentUser","login","username","password","users","includes","isAdmin","console","log","logOut","factory","providedIn"],"sourceRoot":"","sources":["D:\\Phase2\\demoApp\\src\\app\\users\\authservice.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { User } from \"./user\";\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class AuthService{\r\n\r\n\r\n    currentUser!:User |null;\r\n    redirectToUrl!:string;\r\n\r\n    constructor(){}\r\n\r\n    isLoggedIn():boolean{\r\n        return !!this.currentUser;\r\n    }\r\n\r\n    users:string[]=['ayantika','chandni']\r\n\r\n    login(username:string,password:string):void{\r\n\r\n    if(this.users.includes(username)){\r\n     this.currentUser={\r\n        username,\r\n        password,\r\n        isAdmin:true\r\n     };\r\n    }else{\r\n        this.currentUser={\r\n            username,\r\n            password,\r\n            isAdmin:false \r\n    };\r\n\r\n    console.log(this.currentUser.username);\r\n}\r\n\r\n    }\r\n\r\n    logOut():void{\r\n        this.currentUser=null;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}