{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TransformDataPipe {\n  constructor() {\n    this.strings = [];\n  }\n  transform(value, char) {\n    this.strings = value.split(' ');\n    return this.strings.join(char);\n  }\n}\nTransformDataPipe.ɵfac = function TransformDataPipe_Factory(t) {\n  return new (t || TransformDataPipe)();\n};\nTransformDataPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"transformData\",\n  type: TransformDataPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,iBAAiB;EAH9BC;IAIE,YAAO,GAAU,EAAE;;EACnBC,SAAS,CAACC,KAAa,EAAEC,IAAW;IAClC,IAAI,CAACC,OAAO,GAACF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;IAC7B,OAAO,IAAI,CAACD,OAAO,CAACE,IAAI,CAACH,IAAI,CAAC;EAChC;;AALWJ,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;;QAAjBA,iBAAiB;EAAAQ;AAAA","names":["TransformDataPipe","constructor","transform","value","char","strings","split","join","pure"],"sourceRoot":"","sources":["D:\\Phase2\\demoApp\\src\\app\\transform-data.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'transformData'\n})\nexport class TransformDataPipe implements PipeTransform {\n  strings:string[]=[];\n  transform(value: string, char:string): string {\n    this.strings=value.split(' ');\n    return this.strings.join(char);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}